// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BornYearClient is the client API for BornYear service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BornYearClient interface {
	GetBornYear(ctx context.Context, in *Age, opts ...grpc.CallOption) (*Year, error)
}

type bornYearClient struct {
	cc grpc.ClientConnInterface
}

func NewBornYearClient(cc grpc.ClientConnInterface) BornYearClient {
	return &bornYearClient{cc}
}

func (c *bornYearClient) GetBornYear(ctx context.Context, in *Age, opts ...grpc.CallOption) (*Year, error) {
	out := new(Year)
	err := c.cc.Invoke(ctx, "/BornYear/GetBornYear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BornYearServer is the server API for BornYear service.
// All implementations must embed UnimplementedBornYearServer
// for forward compatibility
type BornYearServer interface {
	GetBornYear(context.Context, *Age) (*Year, error)
	mustEmbedUnimplementedBornYearServer()
}

// UnimplementedBornYearServer must be embedded to have forward compatible implementations.
type UnimplementedBornYearServer struct {
}

func (UnimplementedBornYearServer) GetBornYear(context.Context, *Age) (*Year, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBornYear not implemented")
}
func (UnimplementedBornYearServer) mustEmbedUnimplementedBornYearServer() {}

// UnsafeBornYearServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BornYearServer will
// result in compilation errors.
type UnsafeBornYearServer interface {
	mustEmbedUnimplementedBornYearServer()
}

func RegisterBornYearServer(s grpc.ServiceRegistrar, srv BornYearServer) {
	s.RegisterService(&BornYear_ServiceDesc, srv)
}

func _BornYear_GetBornYear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Age)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BornYearServer).GetBornYear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BornYear/GetBornYear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BornYearServer).GetBornYear(ctx, req.(*Age))
	}
	return interceptor(ctx, in, info, handler)
}

// BornYear_ServiceDesc is the grpc.ServiceDesc for BornYear service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BornYear_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "BornYear",
	HandlerType: (*BornYearServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBornYear",
			Handler:    _BornYear_GetBornYear_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc-define/first-grpc.proto",
}
